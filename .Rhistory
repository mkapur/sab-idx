read.csv(paste0(DataFile,"/BC/BC_trawl_survey_sable_data.Oct312019.csv"))  %>%
filter(LONGITUDE <= 0 & !is.na(CATCH_WEIGHT)) %>%
group_by(YEAR) %>%
dplyr::summarise(meanCPUE = mean(CATCH_WEIGHT)) %>%
mutate(Year = YEAR, Value = meanCPUE, CV = NA,
Index = 'Filter_BCTrawl', Type = 'Biomass', Source = 'Assessment',
Estimate_metric_tons =meanCPUE, Fleet2 =
'BC') %>%
select(-meanCPUE, -YEAR)) %>%
bind_rows(., sab2019_2 %>%
mutate(Fleet2 = 'WC', Index = Fleet, Value = Estimate_metric_tons, Type = 'Abundance',
Source = 'assessment') %>%
select(Year, Estimate_metric_tons,  Index, Type, Source, Fleet2))
# assc$Fleet[-grep(paste0(c('NUM','PUE',collapse= "|")),assc$Fleet)]
## Correct scales
assc$Estimate_metric_tons[assc$Fleet2 == 'AK'] <- assc$Value[assc$Fleet2 == 'AK']*  1000
# assc$Estimate_metric_tons[assc$Fleet2 == 'WC'] <- assc$Value * 1000
assc$Estimate_metric_tons[assc$Fleet2 == 'BC'] <- assc$Value[assc$Fleet2 == 'BC'] * 1000
names(assc) <- c('Year','Value','SD_log',"Fleet","TYPE", 'Source',"Estimate_metric_tons","Fleet2")
assc <- assc %>%
select(Year, Fleet, Estimate_metric_tons, SD_log, TYPE, Source, Fleet2 ) %>%
mutate(uci=NA, lci = NA)
## compare_all plot ----
rbind(vastc,assc) %>%
filter(Fleet2 %in% c('WC','BC', 'AK')[1:3]) %>%
filter(Fleet %in% c("California_current","British_Columbia",
'Aleutian_Islands',"Gulf_of_Alaska",
"Eastern_Bering_Sea",
'AK_DOM_LL',"AK_GOA_TRW",'BC_OFFSHORE_STD',
"Filter_BCTrawl","Filter_StRS", "AKSHLF",  "NWCBO")[fleetSel]) %>%
filter(Year < 2019) %>%
# filter(Fleet %in% c("British_Columbia","Filter_BCTrawl")) %>%
ggplot(., aes(x = Year, y =Estimate_metric_tons, col = Fleet, linetype = Fleet)) +
# theme_bw()+
kaputils::theme_black()+
theme(panel.grid = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 12),
strip.text.x = element_text(
size = 16
)) +
# scale_y_continuous(limits = c(0,2e6))+
scale_x_continuous(limits = c(1980,2018),
breaks = seq(1980,2020,10)) +
scale_color_manual( values = c(rep('blue',3), 'dodgerblue3',
cbbPalette),
labels = c(custnames)) +
scale_linetype_manual(values = c(rep('solid',4),
rep('dashed',40)),
labels = c(custnames)) +
labs(x = 'Year', y = 'Estimate (mt)', color = "", linetype = "",
title = '')+ #,
# subtitle = 'BC + WC have been multiplied by 1000') +
geom_line(lwd = 1) +
geom_ribbon(aes(ymin = lci, ymax = uci),
alpha = 0.15, col = 'grey',show.legend = FALSE) +
facet_wrap(~Fleet2, scales = 'free_y', ncol = 3)
DataFile  <- paste0( "C:/Users/",comp.name ,"/Dropbox/UW/sab-idx/data/" ) #paste0( RootFile,"Data/")
DataFile
assc <- read.csv("./data/assessment_CPUE.csv") %>%
mutate(Source = 'assessment', Estimate_metric_tons = Value ,
Fleet2 = substr(Index,1,2)) %>%
filter(Type == 'Abundance' |Type == 'Biomass')  %>%
filter(!grepl('PUE', Index),!grepl('NUM', Index)) %>%
bind_rows(.,
read.csv(paste0(DataFile,"/BC/BC_sable_survey_data.Aug262019.csv"))  %>%
filter(START_LONGITUDE <= 0 & !is.na(CPUE_TRAPS) & !is.na(TOTAL_SABLE_WEIGHT) &
SABLE_SET_TYPE == 'StRS'  ) %>% group_by(SET_YEAR) %>%
dplyr::summarise(meanCPUE = mean(cpue)) %>%
mutate(Year = SET_YEAR, Value = meanCPUE, CV = NA,
Index = 'Filter_StRS', Type = 'Biomass', Source = 'Assessment',
Estimate_metric_tons =meanCPUE, Fleet2 =
'BC') %>%
select(-meanCPUE, -SET_YEAR)) %>%
bind_rows(.,
read.csv(paste0(DataFile,"/BC/BC_sable_survey_data.Aug262019.csv"))  %>%
filter(START_LONGITUDE <= 0 & !is.na(CPUE_TRAPS) & !is.na(TOTAL_SABLE_WEIGHT) &
SABLE_SET_TYPE == 'OFFSHORE STANDARDIZED'  ) %>% group_by(SET_YEAR) %>%
dplyr::summarise(meanCPUE = mean(cpue)) %>%
mutate(Year = SET_YEAR, Value = meanCPUE, CV = NA,
Index = 'BC_OFFSHORE_STD', Type = 'Biomass', Source = 'Assessment',
Estimate_metric_tons =meanCPUE, Fleet2 =
'BC') %>%
select(-meanCPUE, -SET_YEAR)) %>%
bind_rows(.,
read.csv(paste0(DataFile,"/BC/BC_trawl_survey_sable_data.Oct312019.csv"))  %>%
filter(LONGITUDE <= 0 & !is.na(CATCH_WEIGHT)) %>%
group_by(YEAR) %>%
dplyr::summarise(meanCPUE = mean(CATCH_WEIGHT)) %>%
mutate(Year = YEAR, Value = meanCPUE, CV = NA,
Index = 'Filter_BCTrawl', Type = 'Biomass', Source = 'Assessment',
Estimate_metric_tons =meanCPUE, Fleet2 =
'BC') %>%
select(-meanCPUE, -YEAR)) %>%
bind_rows(., sab2019_2 %>%
mutate(Fleet2 = 'WC', Index = Fleet, Value = Estimate_metric_tons, Type = 'Abundance',
Source = 'assessment') %>%
select(Year, Estimate_metric_tons,  Index, Type, Source, Fleet2))
## Correct scales
assc$Estimate_metric_tons[assc$Fleet2 == 'AK'] <- assc$Value[assc$Fleet2 == 'AK']*  1000
# assc$Estimate_metric_tons[assc$Fleet2 == 'WC'] <- assc$Value * 1000
assc$Estimate_metric_tons[assc$Fleet2 == 'BC'] <- assc$Value[assc$Fleet2 == 'BC'] * 1000
names(assc) <- c('Year','Value','SD_log',"Fleet","TYPE", 'Source',"Estimate_metric_tons","Fleet2")
assc <- assc %>%
select(Year, Fleet, Estimate_metric_tons, SD_log, TYPE, Source, Fleet2 ) %>%
mutate(uci=NA, lci = NA)
fleetSel <- c(1:4,6,7,10,8,11,12)
custnames <- c(paste0('VAST ',c('California Current','British Columbia',
'Aleutian Islands', 'Gulf of Alaska','Eastern Bering Sea') ),
'AK Domestic Longline', "AK Gulf Trawl", 'BC Offshore Standardized','BC Synoptic Trawl','BC Trap Stratified',
'Triennial','WCGBTS')[fleetSel]
## compare_all plot ----
rbind(vastc,assc) %>%
filter(Fleet2 %in% c('WC','BC', 'AK')[1:3]) %>%
filter(Fleet %in% c("California_current","British_Columbia",
'Aleutian_Islands',"Gulf_of_Alaska",
"Eastern_Bering_Sea",
'AK_DOM_LL',"AK_GOA_TRW",'BC_OFFSHORE_STD',
"Filter_BCTrawl","Filter_StRS", "AKSHLF",  "NWCBO")[fleetSel]) %>%
filter(Year < 2019) %>%
# filter(Fleet %in% c("British_Columbia","Filter_BCTrawl")) %>%
ggplot(., aes(x = Year, y =Estimate_metric_tons, col = Fleet, linetype = Fleet)) +
# theme_bw()+
kaputils::theme_black()+
theme(panel.grid = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 12),
strip.text.x = element_text(
size = 16
)) +
# scale_y_continuous(limits = c(0,2e6))+
scale_x_continuous(limits = c(1980,2018),
breaks = seq(1980,2020,10)) +
scale_color_manual( values = c(rep('blue',3), 'dodgerblue3',
cbbPalette),
labels = c(custnames)) +
scale_linetype_manual(values = c(rep('solid',4),
rep('dashed',40)),
labels = c(custnames)) +
labs(x = 'Year', y = 'Estimate (mt)', color = "", linetype = "",
title = '')+ #,
# subtitle = 'BC + WC have been multiplied by 1000') +
geom_line(lwd = 1) +
geom_ribbon(aes(ymin = lci, ymax = uci),
alpha = 0.15, col = 'grey',show.legend = FALSE) +
facet_wrap(~Fleet2, scales = 'free_y', ncol = 3)
## compare_all plot ----
rbind(vastc,assc) %>%
filter(Fleet2 %in% c('WC','BC', 'AK')[1:3]) %>%
filter(Fleet %in% c("California_current","British_Columbia",
'Aleutian_Islands',"Gulf_of_Alaska",
"Eastern_Bering_Sea",
'AK_DOM_LL',"AK_GOA_TRW",'BC_OFFSHORE_STD',
"Filter_BCTrawl","Filter_StRS", "AKSHLF",  "NWCBO")[fleetSel]) %>%
filter(Year < 2019) %>%
# filter(Fleet %in% c("British_Columbia","Filter_BCTrawl")) %>%
ggplot(., aes(x = Year, y =Estimate_metric_tons, col = Fleet, linetype = Fleet)) +
# theme_bw()+
kaputils::theme_black()+
theme(panel.grid = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 12),
strip.text.x = element_text(
size = 16
)) +
# scale_y_continuous(limits = c(0,2e6))+
scale_x_continuous(limits = c(1980,2018),
breaks = seq(1980,2020,10)) +
scale_color_manual( values = c(rep('blue',3), 'dodgerblue3',
cbbPalette),
labels = c(custnames)) +
scale_linetype_manual(values = c(rep('solid',4),
rep('dashed',40)),
labels = c(custnames)) +
labs(x = 'Year', y = 'Estimate (mt)', color = "", linetype = "",
title = '')+ #,
# subtitle = 'BC + WC have been multiplied by 1000') +
geom_line(lwd = 1) +
geom_ribbon(aes(ymin = lci, ymax = uci, fill = Fleet),
alpha = 0.15, col = 'grey',show.legend = FALSE) +
facet_wrap(~Fleet2, scales = 'free_y', ncol = 3)
## compare_all plot ----
rbind(vastc,assc) %>%
filter(Fleet2 %in% c('WC','BC', 'AK')[1:3]) %>%
filter(Fleet %in% c("California_current","British_Columbia",
'Aleutian_Islands',"Gulf_of_Alaska",
"Eastern_Bering_Sea",
'AK_DOM_LL',"AK_GOA_TRW",'BC_OFFSHORE_STD',
"Filter_BCTrawl","Filter_StRS", "AKSHLF",  "NWCBO")[fleetSel]) %>%
filter(Year < 2019) %>%
# filter(Fleet %in% c("British_Columbia","Filter_BCTrawl")) %>%
ggplot(., aes(x = Year, y =Estimate_metric_tons, col = Fleet, linetype = Fleet)) +
# theme_bw()+
kaputils::theme_black()+
theme(panel.grid = element_blank(),
legend.position = 'right',
legend.text = element_text(size = 12),
strip.text.x = element_text(
size = 16
)) +
# scale_y_continuous(limits = c(0,2e6))+
scale_x_continuous(limits = c(1980,2018),
breaks = seq(1980,2020,10)) +
scale_color_manual( values = c(rep('blue',3), 'dodgerblue3',
cbbPalette),
labels = c(custnames)) +
scale_linetype_manual(values = c(rep('solid',4),
rep('dashed',40)),
labels = c(custnames)) +
labs(x = 'Year', y = 'Estimate (mt)', color = "", linetype = "",
title = '')+ #,
# subtitle = 'BC + WC have been multiplied by 1000') +
geom_line(lwd = 1) +
geom_ribbon(aes(ymin = lci, ymax = uci, fill = Fleet),
alpha = 0.15, col = 'grey',show.legend = FALSE) +
facet_wrap(~Fleet2, scales = 'free_y', ncol = 3)
## compare_all plot ----
rbind(vastc,assc) %>%
filter(Fleet2 %in% c('WC','BC', 'AK')[1:3]) %>%
filter(Fleet %in% c("California_current","British_Columbia",
'Aleutian_Islands',"Gulf_of_Alaska",
"Eastern_Bering_Sea",
'AK_DOM_LL',"AK_GOA_TRW",'BC_OFFSHORE_STD',
"Filter_BCTrawl","Filter_StRS", "AKSHLF",  "NWCBO")[fleetSel]) %>%
filter(Year < 2019) %>%
# filter(Fleet %in% c("British_Columbia","Filter_BCTrawl")) %>%
ggplot(., aes(x = Year, y =Estimate_metric_tons, col = Fleet, linetype = Fleet)) +
# theme_bw()+
kaputils::theme_black()+
theme(panel.grid = element_blank(),
legend.position = 'right',
legend.text = element_text(size = 12),
strip.text.x = element_text(
size = 16
)) +
# scale_y_continuous(limits = c(0,2e6))+
scale_x_continuous(limits = c(1980,2018),
breaks = seq(1980,2020,10)) +
scale_color_manual( values = c(rep('blue',3), 'dodgerblue3',
'pink',cbbPalette),
labels = c(custnames)) +
scale_linetype_manual(values = c(rep('solid',4),
rep('dashed',40)),
labels = c(custnames)) +
labs(x = 'Year', y = 'Estimate (mt)', color = "", linetype = "",
title = '')+ #,
# subtitle = 'BC + WC have been multiplied by 1000') +
geom_line(lwd = 1) +
geom_ribbon(aes(ymin = lci, ymax = uci, fill = Fleet),
alpha = 0.15, col = 'grey',show.legend = FALSE) +
facet_wrap(~Fleet2, scales = 'free_y', ncol = 3)
## compare_all plot ----
rbind(vastc,assc) %>%
filter(Fleet2 %in% c('WC','BC', 'AK')[1:3]) %>%
filter(Fleet %in% c("California_current","British_Columbia",
'Aleutian_Islands',"Gulf_of_Alaska",
"Eastern_Bering_Sea",
'AK_DOM_LL',"AK_GOA_TRW",'BC_OFFSHORE_STD',
"Filter_BCTrawl","Filter_StRS", "AKSHLF",  "NWCBO")[fleetSel]) %>%
filter(Year < 2019) %>%
# filter(Fleet %in% c("British_Columbia","Filter_BCTrawl")) %>%
ggplot(., aes(x = Year, y =Estimate_metric_tons, col = Fleet, linetype = Fleet)) +
# theme_bw()+
kaputils::theme_black()+
theme(panel.grid = element_blank(),
legend.position = 'right',
legend.text = element_text(size = 12),
strip.text.x = element_text(
size = 16
)) +
# scale_y_continuous(limits = c(0,2e6))+
scale_x_continuous(limits = c(1980,2018),
breaks = seq(1980,2020,10)) +
scale_color_manual( values = c(rep('blue',3), 'dodgerblue3',
'pink',rev(cbbPalette)),
labels = c(custnames)) +
scale_linetype_manual(values = c(rep('solid',4),
rep('dashed',40)),
labels = c(custnames)) +
labs(x = 'Year', y = 'Estimate (mt)', color = "", linetype = "",
title = '')+ #,
# subtitle = 'BC + WC have been multiplied by 1000') +
geom_line(lwd = 1) +
geom_ribbon(aes(ymin = lci, ymax = uci, fill = Fleet),
alpha = 0.15, col = 'grey',show.legend = FALSE) +
facet_wrap(~Fleet2, scales = 'free_y', ncol = 3)
## compare_all plot ----
rbind(vastc,assc) %>%
filter(Fleet2 %in% c('WC','BC', 'AK')[1:3]) %>%
filter(Fleet %in% c("California_current","British_Columbia",
'Aleutian_Islands',"Gulf_of_Alaska",
"Eastern_Bering_Sea",
'AK_DOM_LL',"AK_GOA_TRW",'BC_OFFSHORE_STD',
"Filter_BCTrawl","Filter_StRS", "AKSHLF",  "NWCBO")[fleetSel]) %>%
filter(Year < 2019) %>%
# filter(Fleet %in% c("British_Columbia","Filter_BCTrawl")) %>%
ggplot(., aes(x = Year, y =Estimate_metric_tons, col = Fleet, linetype = Fleet)) +
# theme_bw()+
kaputils::theme_black()+
theme(panel.grid = element_blank(),
legend.position = 'right',
legend.text = element_text(size = 12),
strip.text.x = element_text(
size = 16
)) +
# scale_y_continuous(limits = c(0,2e6))+
scale_x_continuous(limits = c(1980,2018),
breaks = seq(1980,2020,10)) +
scale_color_manual( values = c(rep('blue',3), 'dodgerblue3',
'pink','grey22',rev(cbbPalette)),
labels = c(custnames)) +
scale_linetype_manual(values = c(rep('solid',4),
rep('dashed',40)),
labels = c(custnames)) +
labs(x = 'Year', y = 'Estimate (mt)', color = "", linetype = "",
title = '')+ #,
# subtitle = 'BC + WC have been multiplied by 1000') +
geom_line(lwd = 1) +
geom_ribbon(aes(ymin = lci, ymax = uci, fill = Fleet),
alpha = 0.15, col = 'grey',show.legend = FALSE) +
facet_wrap(~Fleet2, scales = 'free_y', ncol = 3)
## compare_all plot ----
rbind(vastc,assc) %>%
filter(Fleet2 %in% c('WC','BC', 'AK')[1:3]) %>%
filter(Fleet %in% c("California_current","British_Columbia",
'Aleutian_Islands',"Gulf_of_Alaska",
"Eastern_Bering_Sea",
'AK_DOM_LL',"AK_GOA_TRW",'BC_OFFSHORE_STD',
"Filter_BCTrawl","Filter_StRS", "AKSHLF",  "NWCBO")[fleetSel]) %>%
filter(Year < 2019) %>%
# filter(Fleet %in% c("British_Columbia","Filter_BCTrawl")) %>%
ggplot(., aes(x = Year, y =Estimate_metric_tons, col = Fleet, linetype = Fleet)) +
# theme_bw()+
kaputils::theme_black()+
theme(panel.grid = element_blank(),
legend.position = 'right',
legend.text = element_text(size = 12),
strip.text.x = element_text(
size = 16
)) +
# scale_y_continuous(limits = c(0,2e6))+
scale_x_continuous(limits = c(1980,2018),
breaks = seq(1980,2020,10)) +
scale_color_manual( values = c(rep('blue',3), 'dodgerblue3',
'pink','grey88',rev(cbbPalette)),
labels = c(custnames)) +
scale_linetype_manual(values = c(rep('solid',4),
rep('dashed',40)),
labels = c(custnames)) +
labs(x = 'Year', y = 'Estimate (mt)', color = "", linetype = "",
title = '')+ #,
# subtitle = 'BC + WC have been multiplied by 1000') +
geom_line(lwd = 1) +
geom_ribbon(aes(ymin = lci, ymax = uci, fill = Fleet),
alpha = 0.15, col = 'grey',show.legend = FALSE) +
facet_wrap(~Fleet2, scales = 'free_y', ncol = 3)
ggsave(plot = last_plot(),
# file = paste0("./figures/",Sys.Date(),"_idx_comparison.png"),
file = paste0(DateFile,"/compare_all-BLACK.png"),
height = 8, width = 12, unit='in',dpi = 320)
## reboot of jim code showing survey regions and sample sizes [he used base] ----
usa <- map_data("world")
mgmtLims <- data.frame(ymax = c(65,65, 49),
ymin = c(49,49, 30),
xmax = c(-180,-134, -115),
xmin = c(-134,-115, -132))
plist<-list()
plist[[1]] <- ggplot() +
geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = 'grey55') +
coord_quickmap(clip = 'off') +
scale_x_continuous(expand = c(0,0), limits = c(-180,-110), breaks = seq(-180,-120,10), labels = paste(seq(-180,-120,10), "°W")) +
scale_y_continuous(expand = c(0,0), limits = c(30,75), breaks = seq(30,75,10), labels =  paste(seq(30,75,10), "°N"))  +
# theme_minimal() +
kaputils::theme_black() +
theme(panel.grid = element_blank(),
legend.position = 'left',
legend.text = element_text(size = 10)) +
geom_rect(data = mgmtLims, aes(xmin = xmin, ymin = ymin, xmax = xmax, ymax = ymax),
fill =NA, size = 1, colour = 'red') +
geom_label(aes( x = c(rep(-120,2),-145),
y = c(40,55,55),
label = c("Cal Curr.","BC","AK")),
size = 3) +
guides(colour = guide_legend(override.aes = list(alpha=1))) +
geom_point(data = Data_Geostat, alpha = 0.01,
aes(x = Lon,  y = Lat, color = factor(Survey))) +
geom_label(aes( x = c(rep(-120,2),-145),
y = c(40,55,55),
label = c("Cal Curr.","BC","AK")),
size = 3) +
# scale_color_manual(values = c('orchid','gold',cbbPalette)) +
labs(x = 'Longitude', y = 'Latitude', color = 'Survey')
plist[[2]] <- Data_Geostat %>%
group_by(Survey, Year) %>%
summarise(n = n()) %>%
ggplot(., aes(x = Year, y = n, fill = Survey)) +
# theme_minimal() +
kaputils::theme_black() +
theme(legend.position = 'none') +
# geom_point(size = 4) +
geom_bar(stat = 'identity', position = 'stack')+
# scale_y_continuous(limits = c(0,1100), breaks = seq(0,1000,1000)) +
# scale_fill_manual(values = c('orchid','grey22',cbbPalette)) +
labs(x = 'Year', y = 'Sample Size', color = 'Survey')
Rmisc::multiplot(plotlist = plist, cols = 1)
ggsave(plot = Rmisc::multiplot(plotlist = plist, cols = 1) ,
file = "./figures/datamap_size-BLACK.png",
width = 5, height = 7, units = 'in', dpi = 440)
ggsave(plot = Rmisc::multiplot(plotlist = plist, cols = 1) ,
file = "./figures/datamap_size-BLACK.png",
width = 5, height = 7, units = 'in', dpi = 440)
load("C:/Users/mkapur/Dropbox/UW/sab-idx/runs/2020-01-23_nx=500_Triennial_WCGBTS_BCs_BCo_AK_DOM_LL_GOA_baseQ=AK_DOM_LL1980_2018/TmbData.Rdata")
load("C:/Users/mkapur/Dropbox/UW/sab-idx/runs/2020-01-23_nx=500_Triennial_WCGBTS_BCs_BCo_AK_DOM_LL_GOA_baseQ=AK_DOM_LL1980_2018/TmbList.Rdata")
load("C:/Users/mkapur/Dropbox/UW/sab-idx/runs/2020-01-23_nx=500_Triennial_WCGBTS_BCs_BCo_AK_DOM_LL_GOA_baseQ=AK_DOM_LL1980_2018/Record.RData")
load("C:/Users/mkapur/Dropbox/UW/sab-idx/runs/2020-01-23_nx=500_Triennial_WCGBTS_BCs_BCo_AK_DOM_LL_GOA_baseQ=AK_DOM_LL1980_2018/Save_original.RData")
?duo_accent
?xaringanthemer::duo_accent()
write_xaringan_theme(text_color = "#000", header_color = "#000",
background_color = "#FFF", link_color = "rgb(249, 38, 114)",
text_bold_color = NA, text_slide_number_color = inverse_background_color,
padding = "1em 4em 1em 4em", background_image = NA,
background_size = NA, background_position = NA,
code_highlight_color = "rgba(255,255,0,0.5)", code_inline_color = "#000",
code_inline_background_color = NA, code_inline_font_size = "1em",
inverse_background_color = "#272822", inverse_text_color = "#d6d6d6",
inverse_text_shadow = FALSE, inverse_header_color = "#f3f3f3",
title_slide_text_color = inverse_text_color,
title_slide_background_color = inverse_background_color,
title_slide_background_image = NA, title_slide_background_size = NA,
title_slide_background_position = NA, footnote_color = NA,
footnote_font_size = "0.9em", footnote_position_bottom = "3em",
left_column_subtle_color = "#777", left_column_selected_color = "#000",
blockquote_left_border_color = "lightgray", table_border_color = "#666",
table_row_border_color = "#ddd", table_row_even_background_color = "#eee",
text_font_size = "20px", header_h1_font_size = "55px",
header_h2_font_size = "45px", header_h3_font_size = "35px",
text_slide_number_font_size = "0.9em", text_font_google = NULL,
text_font_family = "'Droid Serif'", text_font_weight = "normal",
text_font_url = "https://fonts.googleapis.com/css?family=Droid+Serif:400,700,400italic",
text_font_family_fallback = "'Palatino Linotype', 'Book Antiqua', Palatino, 'Microsoft YaHei', 'Songti SC'",
text_font_base = "serif", header_font_google = NULL,
header_font_family = "'Yanone Kaffeesatz'", header_font_weight = "normal",
header_font_url = "https://fonts.googleapis.com/css?family=Yanone+Kaffeesatz",
code_font_google = NULL, code_font_family = "'Source Code Pro'",
code_font_size = "0.9em",
code_font_url = "https://fonts.googleapis.com/css?family=Source+Code+Pro:400,700",
code_font_family_fallback = "'Lucida Console', Monaco", extra_css = NULL,
extra_fonts = NULL, outfile = "xaringan-themer.css")
library(xaringanthemer)
write_xaringan_theme(text_color = "#000", header_color = "#000",
background_color = "#FFF", link_color = "rgb(249, 38, 114)",
text_bold_color = NA, text_slide_number_color = inverse_background_color,
padding = "1em 4em 1em 4em", background_image = NA,
background_size = NA, background_position = NA,
code_highlight_color = "rgba(255,255,0,0.5)", code_inline_color = "#000",
code_inline_background_color = NA, code_inline_font_size = "1em",
inverse_background_color = "#272822", inverse_text_color = "#d6d6d6",
inverse_text_shadow = FALSE, inverse_header_color = "#f3f3f3",
title_slide_text_color = inverse_text_color,
title_slide_background_color = inverse_background_color,
title_slide_background_image = NA, title_slide_background_size = NA,
title_slide_background_position = NA, footnote_color = NA,
footnote_font_size = "0.9em", footnote_position_bottom = "3em",
left_column_subtle_color = "#777", left_column_selected_color = "#000",
blockquote_left_border_color = "lightgray", table_border_color = "#666",
table_row_border_color = "#ddd", table_row_even_background_color = "#eee",
text_font_size = "20px", header_h1_font_size = "55px",
header_h2_font_size = "45px", header_h3_font_size = "35px",
text_slide_number_font_size = "0.9em", text_font_google = NULL,
text_font_family = "'Droid Serif'", text_font_weight = "normal",
text_font_url = "https://fonts.googleapis.com/css?family=Droid+Serif:400,700,400italic",
text_font_family_fallback = "'Palatino Linotype', 'Book Antiqua', Palatino, 'Microsoft YaHei', 'Songti SC'",
text_font_base = "serif", header_font_google = NULL,
header_font_family = "'Yanone Kaffeesatz'", header_font_weight = "normal",
header_font_url = "https://fonts.googleapis.com/css?family=Yanone+Kaffeesatz",
code_font_google = NULL, code_font_family = "'Source Code Pro'",
code_font_size = "0.9em",
code_font_url = "https://fonts.googleapis.com/css?family=Source+Code+Pro:400,700",
code_font_family_fallback = "'Lucida Console', Monaco", extra_css = NULL,
extra_fonts = NULL, outfile = "xaringan-themer.css")
rm(list = ls())
write_xaringan_theme(text_color = "#000", header_color = "#000",
background_color = "#FFF", link_color = "rgb(249, 38, 114)",
text_bold_color = NA, text_slide_number_color = inverse_background_color,
padding = "1em 4em 1em 4em", background_image = NA,
background_size = NA, background_position = NA,
code_highlight_color = "rgba(255,255,0,0.5)", code_inline_color = "#000",
code_inline_background_color = NA, code_inline_font_size = "1em",
inverse_background_color = "#272822", inverse_text_color = "#d6d6d6",
inverse_text_shadow = FALSE, inverse_header_color = "#f3f3f3",
title_slide_text_color = inverse_text_color,
title_slide_background_color = inverse_background_color,
title_slide_background_image = NA, title_slide_background_size = NA,
title_slide_background_position = NA, footnote_color = NA,
footnote_font_size = "0.9em", footnote_position_bottom = "3em",
left_column_subtle_color = "#777", left_column_selected_color = "#000",
blockquote_left_border_color = "lightgray", table_border_color = "#666",
table_row_border_color = "#ddd", table_row_even_background_color = "#eee",
text_font_size = "20px", header_h1_font_size = "55px",
header_h2_font_size = "45px", header_h3_font_size = "35px",
text_slide_number_font_size = "0.9em", text_font_google = NULL,
text_font_family = "'Droid Serif'", text_font_weight = "normal",
text_font_url = "https://fonts.googleapis.com/css?family=Droid+Serif:400,700,400italic",
text_font_family_fallback = "'Palatino Linotype', 'Book Antiqua', Palatino, 'Microsoft YaHei', 'Songti SC'",
text_font_base = "serif", header_font_google = NULL,
header_font_family = "'Yanone Kaffeesatz'", header_font_weight = "normal",
header_font_url = "https://fonts.googleapis.com/css?family=Yanone+Kaffeesatz",
code_font_google = NULL, code_font_family = "'Source Code Pro'",
code_font_size = "0.9em",
code_font_url = "https://fonts.googleapis.com/css?family=Source+Code+Pro:400,700",
code_font_family_fallback = "'Lucida Console', Monaco", extra_css = NULL,
extra_fonts = NULL, outfile = "xaringan-themer.css")
